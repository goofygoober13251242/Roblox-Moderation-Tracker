import requests
import random
import time
import json
import os

# Your latest Discord Webhook URL
DISCORD_WEBHOOK_URL = ""

# Database file to prevent scanning the same users multiple times
DB_FILE = "tracked_users.json"

# Suspicious chat keywords (expanded list)
suspicious_keywords = [
    "nsfw", "scam", "hack", "cheat", "underage", "groom", "exploit", "illegal", "porn",
    "blackmail", "ddos", "darkweb", "cp", "ransomware", "virus", "malware", "phishing"
]

# Ban reasons & report reasons lists
ban_reasons_list = [
    "🚨 Grooming underage users",
    "🚨 Uploading NSFW content",
    "🚨 Running scams & fake giveaways",
    "🚨 Selling accounts illegally",
    "🚨 Distributing explicit material",
    "🚨 Exploiting in games",
    "🚨 Promoting hacking tools",
    "🚨 Operating scam groups",
    "🚨 Using bots for fake traffic",
]

ban_durations_list = ["🔒 3 Days", "🔒 7 Days", "🔒 30 Days", "🔒 Permanent Ban"]

# Function to load tracked users database
def load_tracked_users():
    if os.path.exists(DB_FILE):
        with open(DB_FILE, "r") as f:
            return json.load(f)
    return {}

# Function to save tracked users
def save_tracked_users(data):
    with open(DB_FILE, "w") as f:
        json.dump(data, f, indent=4)

# Function to get user info
def get_user_info(user_id):
    url = f"https://users.roblox.com/v1/users/{user_id}"
    groups_url = f"https://groups.roblox.com/v2/users/{user_id}/groups/roles"
    presence_url = f"https://presence.roblox.com/v1/presence/users"
    friends_url = f"https://friends.roblox.com/v1/users/{user_id}/friends"

    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            data = response.json()
            username = data.get("name", f"Unknown User {user_id}")
            created_date = data.get("created", "Unknown")[:10]

            account_year = int(created_date[:4]) if created_date[:4].isdigit() else 2025
            if account_year < 2010:
                return None

            # Check last online
            presence_response = requests.post(presence_url, json={"userIds": [user_id]}, timeout=5)
            last_online = "Unknown"
            if presence_response.status_code == 200:
                presence_info = presence_response.json()
                last_online = presence_info["userPresences"][0].get("lastOnline", "Unknown")

            # Get group names
            group_response = requests.get(groups_url, timeout=5)
            group_names = [group["group"]["name"] for group in group_response.json().get("data", [])] if group_response.status_code == 200 else []

            # Get friends list and check if any are banned
            friends_response = requests.get(friends_url, timeout=5)
            banned_friends = []
            if friends_response.status_code == 200:
                friends = friends_response.json().get("data", [])
                for friend in friends:
                    if "Banned" in friend["name"]:
                        banned_friends.append(friend["name"])

            return username, created_date, last_online, group_names, banned_friends
    except requests.exceptions.RequestException:
        pass

    return None

# Function to scan chat logs for suspicious messages
def get_suspicious_chat_logs(user_id):
    chat_url = f"https://chat.roblox.com/v2/get-user-conversations"
    try:
        response = requests.get(chat_url, params={"userId": user_id}, timeout=5)
        if response.status_code == 200:
            chat_data = response.json()
            return [
                f"**Group:** {chat['title']} - **Message:** {chat['lastMessage']['content']}"
                for chat in chat_data.get("conversations", [])
                if any(keyword in chat["lastMessage"]["content"].lower() for keyword in suspicious_keywords)
            ] or ["No suspicious messages found."]
    except requests.exceptions.RequestException:
        return ["⚠️ Failed to retrieve chat logs."]
    
    return ["No suspicious messages found."]

# Function to add a new banned user and send to Discord
def add_banned_user():
    user_id = random.randint(100000000, 900000000)
    tracked_users = load_tracked_users()

    if str(user_id) in tracked_users:
        return  

    user_info = get_user_info(user_id)
    if not user_info:
        return  

    username, created_date, last_online, group_names, banned_friends = user_info
    ban_reason = random.choice(ban_reasons_list)
    ban_duration = random.choice(ban_durations_list)
    profile_url = f"https://www.roblox.com/users/{user_id}/profile"

    suspicious_logs = get_suspicious_chat_logs(user_id)

    message = f"""
══════════════════════════════
🚨 **BANNED USER** 🚨
══════════════════════════════

👤 **Username:** {username}

🆔 **User ID:** {user_id}

🔗 **Profile:** [View Profile]({profile_url})

📅 **Account Created:** {created_date}

🕒 **Last Online:** {last_online}

🏢 **Groups Joined:** {", ".join(group_names) if group_names else "No groups found"}

🚫 **Banned Friends:** {", ".join(banned_friends) if banned_friends else "No banned friends detected"}

⚠️ **Ban Reason:** {ban_reason}

⏳ **Ban Duration:** {ban_duration}

📝 **Suspicious Chat Logs:**
{chr(10).join(suspicious_logs)}

══════════════════════════════
"""

    send_to_discord(message)
    tracked_users[str(user_id)] = True
    save_tracked_users(tracked_users)

# Function to send messages to Discord webhook
def send_to_discord(message):
    data = {"content": message}
    requests.post(DISCORD_WEBHOOK_URL, json=data)

# Run the script every 3 minutes
print("🚀 Script is running... A new banned user will be added every 3 minutes.")

while True:
    add_banned_user()
    print("⏳ Waiting 3 minutes for the next update...")
    time.sleep(180)
